# This is the main configuration file for the application.
# ~~~~~
application.name=GEOIP

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
#application.secret="2RoIhLgyt_9Di70q26oAZ1hZ5<oB^Mv;v94p9B<?BtsJTYnT[O^j831IZY@h5T9j"
application.secret=${APP_SECRET}


# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#

# This is a MySQL database (not used)
#db.mysql.driver="com.mysql.jdbc.Driver"
#db.mysql.url="mysql://b0aa937f8e9a1e:b5b8be17@us-cdbr-east-05.cleardb.net/heroku_c26abd2bf30b214?reconnect=true"

# Configure the JDBC pool for database default
#db.mysql.idleMaxAge=10 minutes
#db.mysql.connectionTimeout=30 seconds
#db.mysql.maxConnectionAge=30 minutes
#db.mysql.acquireRetryAttempts=1
#db.mysql.acquireRetryDelay=5 seconds
#db.mysql.partitionCount=1
#db.mysql.maxConnectionsPerPartition=5
#db.mysql.minConnectionsPerPartition=1
#db.mysql.acquireIncrement=1
#db.mysql.acquireRetryAttempts=1
#db.mysql.logStatements=true

# This sets the time for a connection to remain idle before sending a test query to the DB.
# This is useful to prevent a DB from timing out connections on its end. Heroku ClearDB times out after 60 seconds.
#db.mysql.idleConnectionTestPeriod=30 seconds

# An initial SQL statement that is run only when a connection is first created.
#db.mysql.connectionTestStatement="SELECT 1"

# This is the database (also used by Atlassian Connect)
db.default.driver="org.postgresql.Driver"
#db.default.url="postgres://lgfrcollsoskva:J80Dh7vMKONMIPF4oGZrUHrk3l@ec2-174-129-197-200.compute-1.amazonaws.com:5432/dapqottbk56741?ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory&reconnect=true"
db.default.url=${DB_DEFAULT_URL}

# Local postgres database (not used)
#db.default.url="postgres://postgres:algebra2012@localhost:5432/postgres?reconnect=true"

# Configure the JDBC pool for database ac
db.default.idleMaxAge=10 minutes
db.default.connectionTimeout=30 seconds
db.default.maxConnectionAge=30 minutes
db.default.acquireRetryAttempts=1
db.default.acquireRetryDelay=5 seconds
db.default.partitionCount=1
db.default.maxConnectionsPerPartition=5
db.default.minConnectionsPerPartition=1
db.default.acquireIncrement=1
db.default.acquireRetryAttempts=1
db.default.logStatements=true

# Atlassian Connect requires JNDI & JPA
db.default.jndiName=DefaultDS
jpa.default=defaultPersistenceUnit

# Evolutions
# ~~~~~
# You can disable evolutions if needed
evolutionplugin=disabled

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
ebean.default="models.*"

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

logger.com.jolbox=DEBUG

# Logger used by Atlassian Connect Play
logger.ac=TRACE

# Atlassian Connect add-on key and name (not provided yet)
ac.key="Confluence"
ac.name="Confluence"

# GeoIP2 user ID and licence key
#geoip2.id=85883
#geoip2.key=DCbc8uukhWNg
geoip2.id=${GEOIP2_ID}
geoip2.key=${GEOIP2_KEY}

